from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from filters.chat_type import PrivateChatFilter, AdminFilter, VerifyUsers, UnverifyUsers

from keybords.client_kbrd import get_main_keyboard
from keybords.admin_kbrd import get_admin_keyboard

from config import ADMIN_ID
from handlers.client.utils import read_from_file_db, get_author_name


async def report(message: types.Message):
    user_data = read_from_file_db("summary")[message.from_user.username]
    take_text = ""
    give_text = ""
    for k, v in user_data.items():
        name = get_author_name(k)
        if v > 0:
            give_text += f"{name}: <b>{v}</b> –ª–∞—Ä–∏\n"
        else:
            take_text += f"{name}: <b>{-v}</b> –ª–∞—Ä–∏\n"

    await message.answer(
        f"<u>üìâ –í—ã –¥–æ–ª–∂–Ω—ã:</u>\n" + take_text + f"\n<u>üìà –í–∞–º –¥–æ–ª–∂–Ω—ã:</u>\n" + give_text,
        parse_mode=types.ParseMode.HTML
    )


async def start_command(message: types.Message, state: FSMContext):
    await state.finish()
    keyboard = get_main_keyboard()
    await message.answer("–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É, –∫–æ–∂–∞–Ω—ã–π —É–±–ª—é–¥–æ–∫!", reply_markup=keyboard)


async def start_command_others(message: types.Message):
    await message.answer("–ù—É –∏ —á–æ —Ç–µ–±–µ –Ω–∞–¥–æ, –∫–æ–∂–∞–Ω—ã–π —É–±–ª—é–¥–æ–∫?\n"
                         "–Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫—Ä—É–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
                         "–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–∞–ø–∏—à–∏ @cghael")


async def admin_command(message: types.Message, state: FSMContext):
    await state.finish()
    # TODO maybe some other admin check
    if ADMIN_ID != message.from_user.id:
        await message.answer("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —Ö–æ–∑—è–∏–Ω –∑–∞–ø—Ä–µ—Ç–∏–ª –º–Ω–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –æ–± —ç—Ç–æ–º.")
        return
    keyboard = get_admin_keyboard()
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, —Ö–æ–∑—è–∏–Ω!", reply_markup=keyboard)


def register_commands_handlers(dp: Dispatcher):
    dp.register_message_handler(
        start_command_others,
        UnverifyUsers(),
        PrivateChatFilter(),
        commands=['start']
    )
    dp.register_message_handler(
        start_command,
        PrivateChatFilter(),
        VerifyUsers(),
        commands=['start'],
        state="*"
    )
    dp.register_message_handler(
        admin_command,
        AdminFilter(),
        commands=['admin'],
        state="*"
    )
    dp.register_message_handler(
        report,
        PrivateChatFilter(),
        VerifyUsers(),
        content_types=['text'],
        text='üìä –û—Ç—á–µ—Ç'
    )
